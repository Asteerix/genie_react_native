#!/usr/bin/env node
/**
 * Script pour r√©initialiser l'authentification de l'application
 * 
 * Ce script cr√©e un fichier temporaire qui sera ex√©cut√© au d√©marrage 
 * de l'application pour r√©initialiser les donn√©es d'authentification.
 */

const fs = require('fs');
const path = require('path');

// Chemin vers le fichier temporaire de r√©initialisation
const resetFilePath = path.join(__dirname, '..', 'reset-on-startup.js');

// Contenu du fichier de r√©initialisation
const resetFileContent = `// Ce fichier est automatiquement cr√©√© par reset-app.js
// Il sera ex√©cut√© une fois au d√©marrage de l'application pour r√©initialiser l'authentification

import AsyncStorage from '@react-native-async-storage/async-storage';
import { resetAuthData } from './utils/resetLocalData';

// Fonction qui sera appel√©e au d√©marrage de l'application
export async function resetOnStartup() {
  console.log('R√©initialisation des donn√©es d\'authentification...');
  try {
    // R√©initialiser les donn√©es d'authentification
    await resetAuthData();
    
    // Supprimer ce fichier apr√®s l'ex√©cution
    // Note: Cela n√©cessite des permissions de syst√®me de fichiers qui ne sont pas disponibles dans l'environnement React Native
    // Ce fichier devra √™tre supprim√© manuellement si n√©cessaire
    
    console.log('R√©initialisation termin√©e avec succ√®s');
    return true;
  } catch (error) {
    console.error('Erreur lors de la r√©initialisation:', error);
    return false;
  }
}

// Exporter par d√©faut pour faciliter l'importation
export default resetOnStartup;
`;

// Contenu du correctif pour App.tsx
const appPatchContent = `
// Dans votre fichier App.tsx, ajoutez ces lignes au d√©but du composant principal
// pour ex√©cuter la r√©initialisation au d√©marrage

import { useEffect } from 'react';
import resetOnStartup from './reset-on-startup';

// Dans votre composant App principal:
useEffect(() => {
  // Ex√©cuter la r√©initialisation au d√©marrage
  resetOnStartup().then(success => {
    if (success) {
      console.log('Application r√©initialis√©e avec succ√®s');
    }
  });
}, []);
`;

// Cr√©er le fichier de r√©initialisation
try {
  fs.writeFileSync(resetFilePath, resetFileContent);
  console.log(`\n‚úÖ Fichier de r√©initialisation cr√©√©: ${resetFilePath}`);
  
  console.log('\nüîç Instructions d\'utilisation:');
  console.log('---------------------------------------');
  console.log('Pour que la r√©initialisation fonctionne:');
  console.log('1. Importez la fonction de r√©initialisation dans App.tsx');
  console.log('2. Ajoutez le code suivant dans votre composant App:');
  console.log('---------------------------------------');
  console.log(appPatchContent);
  console.log('---------------------------------------');
  console.log('3. Red√©marrez l\'application');
  console.log('4. Apr√®s la premi√®re ex√©cution, vous pouvez supprimer ce code et le fichier reset-on-startup.js');
  console.log('\n‚ö†Ô∏è  Note: Cette solution fonctionne uniquement en mode d√©veloppement.');
  console.log('Pour une solution permanente, int√©grez la r√©initialisation dans votre √©cran de param√®tres.');
} catch (error) {
  console.error('‚ùå Erreur lors de la cr√©ation du fichier de r√©initialisation:', error);
}